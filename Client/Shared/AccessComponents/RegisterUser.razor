@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<AccessComponent Title="Hola, vamos a comenzar" Description="Completa los campos para crear tu cuenta" MaxWidth="max-width: 400px;">
  <EditForm Model="@User" OnSubmit="@CreateNewUser">
    <div class="label">
      <label for="name">Nombre<strong>*</strong></label>
    </div>
    <input @bind-value="User.Name" class="input" type="text" placeholder="Ingresa tu nombre" id="name">
    <div class="label">
      <label for="last-name">Apellido<strong>*</strong></label>
    </div>
    <input @bind-value="User.LastName" type="text" class="input" placeholder="Ingresa tu apellido">
    <div class="label">
      <i class="fi fi-tr-at"></i>
      <label for="email">Correo electr&oacute;nico<strong>*</strong></label>
    </div>
    <input @bind-value="User.Register.Email" class="input" type="email" placeholder="Ingresar correo electrónico" id="email">
    <div class="label">
      <i class="fi fi-tr-vault"></i>
      <label for="password">Contrase&ntilde;a<strong>*</strong></label>
    </div>
    <div class="input-container">
      <input @bind-value="User.Register.Password" type="password" class="input" placeholder="Ingresa tu nueva contraseña" id="password" >
      <span class="input-icon">
        <i class="fi fi-tr-low-vision eye"></i>
      </span>
    </div>
    <div class="login-button">
      <button type="submit" class="lgn-button button primary-background-button">
        Registrarme
      </button>
      <p>
        ¿Ya tienes una cuenta? <b>Iniciar sesi&oacute;n</b>
      </p>
    </div>
  </EditForm>
</AccessComponent>

@code {
  public UserDto User { get; set; }

  protected override void OnInitialized() {
    User = new() {
      Id = Guid.NewGuid(),
      Register = new() {
        User = User
      },
      Age = 25,
      BirthDate = DateTime.Now,
      Bio = "Bio",
      InstitutionId = Guid.Parse("390726E2-4E4A-4558-9E30-C3FAD2D5426B"),
      PhoneNumber = "",
      Institution = new(),
      OnlineStatus = new()
    };
  }

  private async Task CreateNewUser() {
    var response = await HttpClient.PostAsync("api/user/create", JsonContent.Create(User));
    var content = await response.Content.ReadAsStringAsync();

    if (!response.IsSuccessStatusCode) {
      throw new ApplicationException(content);
    }

    NavigationManager.NavigateTo("/");
  }
}
