@inject NavigationManager NavigationManager

<style>
  b {
    color: var(--primary-color);
  }
</style>

<div
  class="navigation-mobile @(ShowMobileNavigation ? "show-mobile" : "")"
@onclick="@(() => ShowMobileNavigation = !ShowMobileNavigation)"></div>

<div class="navbar-container">
  <div class="navbar-content">
    <div class="logo-container">
      <p class="logo" @onclick="@(() => OnNavigation("/", false))"><b>Firmacadem</b></p>
    </div>
    <div class="nav-mobile">
      <i class="fi fi-tr-bars-staggered" @onclick="@(() => ShowMobileNavigation = !ShowMobileNavigation)"></i>
    </div>
    <div class="navigation">
      <NavigationLinks
        HideOnMobile="hide-on-mobile"
        Styles="margin-right: 40px; justify-content: center;"
      />
      @if (UserContext.IsActiveUser) {
        <UserInfoOptions Selection="landing"/>
      }
      @if (!NavBarContext.HideButtons && !UserContext.IsActiveUser) {
        <div class="buttons">
          <button
            type="button"
            class="button transparent-button"
          @onclick="@(() => OnNavigation("/access/login", true))"
          >
            Iniciar sesi&oacute;n
          </button>
          <button
            type="button"
            class="button primary-background-button"
          @onclick="@(() => OnNavigation("/access/register", true))"
          >
            Registrarme
          </button>
        </div>
      }
    </div>
  </div>
</div>

@code {
  [Inject]
  private UserContext UserContext { get; set; }
  [Inject]
  private NavBarContext NavBarContext { get; set; }
  private bool ShowMobileNavigation { get; set; } = false;

  protected override void OnInitialized() {
    NavBarContext.OnChange += HandleStateChange;
    UserContext.OnChange += HandleStateChange;
  }

  private void OnNavigation(string route, bool hide) {
    NavBarContext.ChangeHideButtons(hide);

    NavigationManager.NavigateTo(route);
  }

  private void HandleStateChange() {
    StateHasChanged();
  }
}