@inject NavigationManager NavigationManager

<div class="navbar-container">
  <div class="navbar-content">
    <div class="user-options @(!ShowUserOptions ? "hide" : "")">

    </div>

    <div>
      <p class="logo" @onclick="@(() => OnNavigation("/", false))">Landing</p>
    </div>
    <div class="navigation">
      <NavigationLinks
        HideOnMobile="hide-on-mobile"
        Styles="margin-right: 40px; justify-content: center;"
      />
      @if (!NavBarContext.HideButtons) {
        @if (UserContext.IsActiveUser) {
          <div class="user-info centered-container" @onclick="@(() => ShowUserOptions = !ShowUserOptions)">
            <div class="user-image"></div>
            <div class="user-info-data">
              <p>@($"{UserContext.User.Name} {UserContext.User.LastName}")</p>
              <p>@($"{UserContext.User.Register.Email}")</p>
            </div>
            <div class="select-profile-options">
              <i class="fi fi-tr-angle-double-small-down"></i>
              <div class="profile-options"></div>
            </div>
          </div>
        } else {
          <div class="buttons">
            <button
              type="button"
              class="button transparent-button"
            @onclick="@(() => OnNavigation("/access", true))"
            >
              Iniciar sesi&oacute;n
            </button>
            <button
              type="button"
              class="button primary-background-button"
            @onclick="@(() => OnNavigation("/access/register", true))"
            >
              Registrarme
            </button>
          </div>
        }
      }
    </div>
  </div>
</div>

@code {
  [Inject]
  public UserContext UserContext { get; set; }
  [Inject]
  public NavBarContext NavBarContext { get; set; }
  private bool ShowUserOptions { get; set; } = false;

  protected override void OnInitialized() {
    NavBarContext.OnChange += HandleStateChange;
    UserContext.OnChange += HandleStateChange;
  }

  private void OnNavigation(string route, bool hide) {
    NavBarContext.ChangeHideButtons(hide);

    NavigationManager.NavigateTo(route);
  }

  private void HandleStateChange() {
     StateHasChanged(); 
  }
}