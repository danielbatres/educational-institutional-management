<div class="top-container">
    <div class="left-side-container">
        <h3>
            @ContentContext.Section
        </h3>
        <p class="route">@ContentContext.Content</p>
    </div>
    <div class="right-side-container">
        <div class="search">
            @if (GeneralSearchContext.ShowGeneralSearch) { <SearchPages InstitutionId="@UserContext.User.InstitutionId.ToString()"/> }
            <i class="fi fi-tr-search-location"></i>
            <input value="@GeneralSearchContext.SearchValue" type="text" placeholder="Buscar secciÃ³n por nombre" class="input" @oninput="@UpdateSearchValue" @onclick="@SetShow">
        </div>
        <div class="icons">
            <div class="centered-container" @onclick="@(() => NavigationManager.NavigateTo($"application/{UserContext.User.InstitutionId}/settings/appearance"))"><i class="fi fi-tr-swatchbook"></i></div>
        </div>
        <UserInfoOptions Selection="application" />
    </div>
</div>

@code {
    [Inject]
    private ContentContext ContentContext { get; set; }
    [Inject]
    private GeneralSearchContext GeneralSearchContext { get; set; }
    [Inject]
    private UserContext UserContext { get; set; }
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private void UpdateSearchValue(ChangeEventArgs e) {
        GeneralSearchContext.SetSearchValue(e.Value.ToString());
    }
    protected override void OnInitialized() {
        ContentContext.OnChange += HandleStateChange;
        GeneralSearchContext.OnChange += HandleStateChange;
    }

    private void SetShow() {
        GeneralSearchContext.SetPreventClose(true);
        GeneralSearchContext.SetShowGeneralSearch(true);
    }

    private void HandleStateChange() {
        StateHasChanged();
    }
}