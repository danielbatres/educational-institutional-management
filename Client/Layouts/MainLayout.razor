@inherits LayoutComponentBase

<style>
    :root {
        --white: #FFFFFF;
        --primary-color: #4361EE;
        --dark-color: #0E1116;
        --text-color: #7f8084;
        --light-text-color: #C2C2C2;
        --light-color: #ECECEC;
        --light-primary-color: #D9DFFF;
        --success-color: #3DC13C;
        --danger-color: #F13637;
        --light-danger-color: #f1363638;
        --warning-color: #F3BB1B;
        --light-border: 1px solid var(--light-color);
        --smaller-text: 0.85rem;
        --small-text: 0.9rem;
        --regular-text: 1rem;
        --title: 1.4rem;
    }
</style>

<div class="page">
    <main>
        <article class="content px-4">
            <div class="modal-overlay @(!InstitutionContext.ShowRegisterModal ? "hide-modal" : "")">
                <div class="modal">
                    <div class="cross">
                        <i class="fi fi-tr-circle-xmark" @onclick="@(() => ExitModal(false))"></i>
                    </div>
                    <div class="warning-circle centered-container">
                        <i class="fi fi-tr-circle-user"></i>
                    </div>
                    <h3>
                        Antes de continuar
                    </h3>
                    <p>Primero debes de estar registrado para poder comprar un plan de servicio</p>
                    <div class="buttons-modal">
                        <button type="button" class="button" @onclick="@(() => ExitModal(true))">Registrarme</button>
                        <button type="button" class="button" @onclick="@(() => ExitModal(false))">Aceptar</button>
                    </div>
                </div>
            </div>
            <NavBar />
            @Body
            <Footer />
        </article>
    </main>
</div>

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set;}
    [Inject]
    private UserContext UserContext { get; set; }
    [Inject]
    private RegisterInstitutionContext InstitutionContext { get; set; }
    [Inject]
    private NavBarContext NavBarContext { get; set; }

    protected override void OnInitialized() {
        InstitutionContext.OnChange += HandleStateChange;
        UserContext.OnChange += HandleStateChange;
    }

    private void ExitModal(bool goRegister) {
        InstitutionContext.SetShowRegisterModal(false);

        if (goRegister) {
            NavigationManager.NavigateTo("/access/register");

            NavBarContext.ChangeHideButtons(true);
        }
    }

    private void HandleStateChange() {
        StateHasChanged();
    }
}
