@page "/user-profile/{UserId}"

<PageTitle>Landing | Perfil de usuario</PageTitle>

<LandingComponents MinHeight="min-height: 100vh;">
  <section>
    <article class="sidebar-user-profile @(MenuToggle ? "low-side" : "")">
      <div class="sidebar-user">
        <div>
          <div class="account">
            <h5>
              Configuraciones de usuario
            </h5>
            <ul>
              <li class="my-account">
                <p>Mi cuenta</p>
                <i class="fi fi-tr-chevron-double-down" @onclick="@(() => MenuToggle = !MenuToggle)"></i>
              </li>
            </ul>
          </div>
          <div class="access">
            <h5>
              Acceso de trabajo
            </h5>
            <ul>
              <li>
                <p>Solicitudes de ingreso</p>
              </li>
            </ul>
          </div>
          </div>
        <div class="exit-sesion">
          <ul>
            <li>
              <p>Cerrar sesi&oacute;n</p>
            </li>
          </ul>
        </div>
      </div>
    </article>
    <article class="user-form">
      <div class="user-selected-color">
        <div class="edit-color centered-container">
          <i class="fi fi-tr-pen-circle"></i>
        </div>
      </div>
      <div class="user-main-info">
        <div class="user-info">
          <div class="user-photo-container">
            <div class="user-profile-photo centered-container">
              <div class="user-photo"></div>
            </div>
          </div>
          <div class="user-name-email">
            <h3>@($"{UserContext.User.Name} {UserContext.User.LastName}")</h3>
            <p>@UserContext.User.Register.Email</p>
          </div>
        </div>
      </div>
      <div class="user-information">
        <div>
          <h4>Informaci&oacute;n de tu cuenta</h4>
          <p>
            Informaci&oacute;n de tu perfil, modifica el campo que desees para
            realizar cambios
          </p>
        </div>
        <div class="buttons">
          <button type="button" class="transparent-button button @(!HasChanges ? "not-enabled-button" : "")" @onclick="@RevertChanges" disabled="@(!HasChanges)">
            Cancelar
          </button>
          <button type="button" class="primary-background-button button @(!HasChanges ? "not-enabled-button" : "")" @onclick="@UpdateUser" disabled="@(!HasChanges)">
            Guardar
          </button>
        </div>
      </div>
      <form class="user-form-inputs">
        <fieldset>
          <div class="label">
            <label for="name">Nombre <strong>*</strong></label>
          </div>
          <input value="@NewUser.Name" type="text" class="input" placeholder="Ingresa tu nombre" id="name" @oninput="@UpdateName">
          <p class="recommendation-message">Te recomendamos utilizar tu nombre real</p>
        </fieldset>
        <fieldset>
          <div class="label">
            <label for="last-name">Apellido <strong>*</strong></label>
          </div>
          <input value="@NewUser.LastName" type="text" class="input" placeholder="Ingresa tu apellido" id="last-name" @oninput="@UpdateLastName">
        </fieldset>
        <fieldset>
          <div class="label">
            <label for="nickname">Username <strong>*</strong></label>
          </div>
          <input type="text" class="input" placeholder="Ingresa tu username" id="nickname">
          <p class="recommendation-message">Tu username es &uacute;nico</p>
        </fieldset>
        <fieldset>
          <div class="label">
            <label for="name">Fecha de nacimiento</label>
          </div>
          <div class="birth-date-inputs">
            <input type="text" maxlength="2" class="input" placeholder="dd">
            <input type="text" maxlength="2" class="input" placeholder="mm">
            <input type="text" maxlength="4" class="input" placeholder="yyyy">
          </div>
        </fieldset>
        <fieldset>
          <div class="label">
            <label for="phone-number">N&uacute;mero de tel&eacute;no</label>
          </div>
          <input value="@NewUser.PhoneNumber" id="phone-number" type="text" class="input" placeholder="Ingresar número de teléfono" @oninput="@UpdatePhoneNumber">
        </fieldset>
        <fieldset>
          <div class="label">
            <label for="email">Correo electr&oacute;nico <strong>*</strong></label>
          </div>
          <input value="@NewUser.Register.Email" id="email" type="email" class="input" placeholder="Ingresar correo eletrónico" @oninput="@UpdateEmail">
        </fieldset>
        <fieldset>
          <div class="label">
            <label for="bio">Biograf&iacute;a</label>
            <p>1024</p>
          </div>
          <textarea value="@NewUser.Bio" name="biography" id="bio" maxlength="1024" placeholder="Ingresa tu biografía" @oninput="@UpdateBio"></textarea>
          <p class="recommendation-message">Una descripci&oacute;n breve para tu perfil</p>
        </fieldset>
        <fieldset>
          <div class="label">
            <label for="location">Ubicaci&oacute;n </label>
          </div>
          <input value="@NewUser.Location" id="location" type="text" class="input" placeholder="Ingresar ubicación">
          <p class="recommendation-message">Cuentanos de donde eres</p>
        </fieldset>
        <fieldset>
          <div class="label">
            <label for="change-password">Contrase&ntilde;a</label>
          </div>
          <button id="change-password" type="button" class="button primary-background-button">Cambiar contrase&ntilde;a</button>
        </fieldset>
      </form>
    </article>
  </section>
</LandingComponents>

@code {
  private User UserBackup;
  private User NewUser;
  [Inject]
  private UserContext UserContext { get; set; }
  [Inject]
  private NavigationManager NavigationManager { get; set; }
  [Inject]
  private IUserService UserService { get; set; }
  [Inject]
  private LoadingContext LoadingContext { get; set; }
  [Parameter]
  public String UserId { get; set; } = string.Empty;
  private bool MenuToggle { get; set; } = false;
  private int SelectedContainer { get; set; } = 0;
  private bool HasChanges = false;

  protected override void OnInitialized() {
    UserContext.OnChange += HandleStateChange;

    if (UserContext.User != null) {
      UserBackup = UserContext.User.Clone();
      NewUser = UserContext.User.Clone();
    }
  }

  protected override void OnParametersSet() {
    if (UserContext.User == null) {
      NavigationManager.NavigateTo("/");
    }

    string Id = UserContext.User?.Id.ToString() ?? string.Empty;

    if (!UserId.Equals(Id)) {
      NavigationManager.NavigateTo("/");
    }
  }

  private async Task UpdateUser() {
    LoadingContext.SetLoading(true);
    LoadingContext.SetLoadingMessage("Actualizando tu usuario...");

    await UserService.Update(NewUser);
    UserBackup = UserContext.User.Clone();
    NewUser = UserContext.User.Clone();
    HasChanges = false;
    LoadingContext.SetLoading(false);
  }

  private void SetChanges() {
    HasChanges = !UserBackup.Equals(NewUser);
  }

  private void RevertChanges() {
    NewUser = UserBackup.Clone();

    HasChanges = false;
  }

  private void UpdateName(ChangeEventArgs e) {
    NewUser.Name = e.Value.ToString();
    SetChanges();
  }

  private void UpdateLastName(ChangeEventArgs e) {
    NewUser.LastName = e.Value.ToString();
    SetChanges();
  }

  private void UpdateLocation(ChangeEventArgs e) {
    NewUser.Location = e.Value.ToString();
    SetChanges();
  }

  private void UpdateBio(ChangeEventArgs e) {
    NewUser.Bio = e.Value.ToString();
    SetChanges();
  }

  private void UpdateEmail(ChangeEventArgs e) {
    NewUser.Register.Email = e.Value.ToString();
    SetChanges();
  }

  private void UpdatePhoneNumber(ChangeEventArgs e) {
    NewUser.PhoneNumber = e.Value.ToString();
    SetChanges();
  }

  private void HandleStateChange() {
    if (UserContext.User == null) {
      NavigationManager.NavigateTo("/");
    }

    StateHasChanged();
  }
}