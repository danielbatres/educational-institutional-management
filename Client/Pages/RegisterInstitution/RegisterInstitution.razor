@page "/register-institution" 

<PageTitle>Landing | Registrar nueva instituci&oacute;n</PageTitle>

<FormProcess Border="border-left: 1px solid var(--light-color);">
  <section class="sectioned-container">
    <div class="@(InstitutionContext.Selection == 0 ? "" : "is-not-selected") sectioned-content">
      <AddressInfo />
    </div>
    <div class="@(InstitutionContext.Selection == 1 ? "" : "is-not-selected") sectioned-content">
      <ContactInfo />
    </div>
    <div class="@(InstitutionContext.Selection == 2 ? "" : "is-not-selected") sectioned-content">
      <PaymentDetails />
    </div>
    <div class="navigation-form">
      <div class="circles">
        <div class="line-behind"></div>
        <div class="extension">
          @for (byte i = 0; i < 3; i++) {
            byte index = i;

            <div class="circle">
              <button type="button" class="@(InstitutionContext.Selection == i ? "selected-option" : "")" @onclick="@(() => SetSelected((int) index))"></button>
            </div>
          }
        </div>
      </div>
      <div class="extension options">
        <p>Direcci&oacute;n</p>
        <p>Contacto</p>
        <p>Pago</p>
      </div>
    </div>
  </section>
  <section class="sectioned-container">
    <Invoice />
  </section>
</FormProcess>

@code {
  [Inject]
  public NavigationManager NavigationManager { get; set; }
  [Inject]
  public UserContext UserContext { get; set;}
  [Inject] 
  public RegisterInstitutionContext InstitutionContext { get; set; }

  protected override void OnInitialized() {
    InstitutionContext.CreateInstitution();

    InstitutionContext.OnChange += HandleStateChange;

    if (UserContext.User == null) {
      InstitutionContext.SetShowRegisterModal(true);

      NavigationManager.NavigateTo("/");
    }
  }

  private void HandleStateChange() {  
    StateHasChanged();
  }

  private void SetSelected(int selected) {
    InstitutionContext.SetSelection((RegisterInstitutionSelection) selected);
  }
}
