<style>
  #input-file {
    position: absolute;
    width: 100%;
    height: 100%;
  }

  #input-file {
    opacity: 0;
    overflow: hidden;
    color: var(--light-color);
    left: 0;
    cursor: pointer;
  }
</style>

<SectionModule>
  <div class="show-student-container">
    <div class="box-background student-info">
    <button type="button" class="goback-button gray-button centered-container" @onclick="@ExitStudentView">
      <i class="fi fi-tr-arrow-small-left"></i>
    </button>
    <div class="student-data">
      <div class="student-image">
        @if (_studentContext.Student.Photo != null) {
          string imageSrc = string.Empty;

          var imageBase64 = Convert.ToBase64String(_studentContext.Student.Photo);
          imageSrc = $"data:image/png;base64,{imageBase64}";
        
          @if (imageSrc != string.Empty) {
               <img src="@imageSrc" alt="@_studentContext.Student.Name">
          }
         }
        <InputFile id="input-file" OnChange="@OnInputFileChange"/> 
      </div>
      <div>
        @if (_studentContext.ActionStudent.Equals(ActionType.Create)) {
          <h4>Nuevo estudiante</h4>
          <p>Agrega la informaci&oacute;n para el nuevo estudiante</p>
        } else {
          <h4>@_studentContext.Student.Name @_studentContext.Student.LastName</h4>
          <p>@_studentContext.Student.StudentRegister?.Email</p>
        }
      </div>
    </div>
  </div>
  <div class="box-background student-info-content">
    <div>
      <h6>Ficha de estudiante</h6>
      <p>Informaci&oacute;n completa sobre el estudiante</p>
    </div>
    <div>
      <button type="button" class="button transparent-button" @onclick="@RemoveChanges">Cancelar</button>
      <button type="button" class="button primary-background-button" @onclick="@SaveChanges">Guardar</button>
    </div>
  </div>
  <div class="box-background">
    <ul class="navigation-bar-options">
      <li class="@(NavigationOption == 0 ? "selected-navigation" : "")" @onclick="@(() => SetNavigationOption(Guid.Empty, 0))">
        <p>Datos generales del estudiante</p>
      </li>
      @foreach (var category in Categories) {
        Guid cateogoryId = category.Id;
        int index = Categories.IndexOf(category);

        <li class="@(NavigationOption == (index + 1) ? "selected-navigation" : "")" @onclick="@(() => SetNavigationOption(cateogoryId, (index + 1)))">
          <p>@category.Name</p>
        </li>
      }
    </ul>
  </div>

  @if (!_studentContext.CurrentCategorySelectionId.Equals(Guid.Empty)) {
    <form id="@_studentContext.CurrentCategorySelectionId" class="box-background">
      @foreach (var field in Categories.FirstOrDefault(c => c.Id == _studentContext.CurrentCategorySelectionId).Fields) {
        int index = Categories.FirstOrDefault(c => c.Id == _studentContext.CurrentCategorySelectionId).Fields.ToList().IndexOf(field);
        FieldInformation fieldInformation = _studentContext.FieldInformations.FirstOrDefault(f => f.FieldId.Equals(field.Id)) ?? new();
        
        <fieldset>
          <div class="label">
            <label for="field-@index">@field.Name</label>
          </div>
          @if (field.FieldType == FieldType.Text || field.FieldType == FieldType.Number) {
            <input @bind="@fieldInformation.Information" type="text" class="input" placeholder="Ingresar @field.Name.ToLower()" id="field-@index">
          } else {
            <select id="field-@index" @bind="@fieldInformation.Information">
              @if (field.Options != null) {
                @foreach (var option in field.Options) {
                  <option value="@option.Name">@option.Name</option>
                }
              }
            </select>
          }
        </fieldset>
      }
    </form>
  } else {
    @if (NavigationOption == 0) {
      <StudentGeneralData />
    } else if (NavigationOption == 1) {

    }
  }
  </div>
</SectionModule>